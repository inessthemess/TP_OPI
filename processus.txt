EXERCICE 1 : Liste des processus

1. Pour lister tous les processus qui nous appartiennent il faut entrer la commande :
ps -u pltguest

2. Pour afficher tous les processus de tous les utilisateurs on lance la commande :
ps aux

3. Pour trouver le processus qui consomme le plus de mémoire nous faisons :
ps aux --sort=-%mem | head
firefox consomme alors le plus de mémoire

4.Pour déterminer si firefox est lancé nous pouvons lancer la commande suivante dans le terminal :
pgrep -l firefox


EXERCICE 2 : Top

1. Pour que les informations soient rafraîchies toutes les secondes il faut entrer la commande :
top -d 1

2. Pour lancer un nouveau firefox nous pouvons faire "firefox &". Pour tuer firefox depuis top il faut :
dans un premier temps taper "k"
dans un second temps écrire le PID de firefox puis entrer



EXERCICE 3 : Job control

1. Lors de l'utilisation de la commande "emacs" le terminal se retrouve bloqué et inutilisable avant la fermeture de emacs. Cependant en entrant la commande "emacs &" le terminal reste toujours disponible tout en ayant emacs lancé.

2. En exécutant jobs nous obtenons :

[1]   Arrêté                man gcc
[2]-  Arrêté                info gcc
[3]+  Arrêté                emacs

3. Pour mettre emacs en arrière-plan nous faisons :
bg emacs (BackGround)
Pour reprendre l'exécution de man gcc en avant-plan nous faisons :
fg man gcc (ForeGround)



4. Pour tuer les deux autres jobs on exécute la commande suivante :
kill %2
kill %3



EXERCICE 4 : Signaux et processus

1. Pour envoyer un signal de suspension à emacs depuis le terminal 2 nous devons d'abord trouver son PID (pgrep -l emacs). Ensuite nous faisons :

kill -SIGTSTP 29058  (29058 étant le PID de emacs dans notre cas)

Nous déduisons que C-z envoie un signal de suspension SIGTSTP au processus qui est en avant-plan


2.

